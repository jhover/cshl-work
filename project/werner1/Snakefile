# To submit on Elzar:
#  snakemake --jobs 20 --cluster "qsub 
#									-N werner1 
#									-pe threads {threads}
# 									-wd ~/project/werner1.1 
#									-l m_mem_free={resources.mem_mb}M 
#									-o ~/project/$JOB_NAME/logs/$JOB_NAME.o$JOB_ID.$TASK_ID
#									-e ~/project/$JOB_NAME/logs/$JOB_NAME.e$JOB_ID.$TASK_ID "   

import os

homedir = os.path.expanduser("~/")
print(homedir)
wdir = homedir + "work/werner1.1"
chr="X"
snpdb=f"{homedir}/data/snpdb/chr{chr}.snpdb.txt"


(SAMPLE,) = glob_wildcards(homedir + "data/GTEx/v8/jon_bams/{sample}.Aligned.sortedByCoord.out.patched.md.bam")
SAMPLE = ['GTEX-1HFI7-1126-SM-A96S5','GTEX-1HFI7-1926-SM-A96TQ' ]

rule all:
	input:
	    expand(wdir + "/{sample}." + chr + ".filtered.vcf", sample=SAMPLE )
    
	    
rule samtools1: 		
	input: homedir + "data/GTEx/v8/jon_bams/{sample}.Aligned.sortedByCoord.out.patched.md.bam"
	output:  wdir + "/{sample}.readSorted.bam"	
	resources:
		mem_mb=3072
	threads: 8
	log: homedir + "project/werner1/logs/{sample}.1sam.log"
	shell:
		"samtools sort -m {resources.mem_mb}M -o {output} -O bam -n -@ {threads} {input} "
	
rule bedtools2:
	input:  wdir + "/{sample}.readSorted.bam"
	output:
		end1=wdir + "/{sample}.end1.fq",
		end2=wdir + "/{sample}.end2.fq"
	resources:
		mem_mb=4096
	threads: 1
	log:
		homedir + "project/werner1/logs/{sample}.2bed.log"
	shell:
		"bedtools bamtofastq -i {input} -fq {output.end1} -fq2 {output.end2}"	
	
rule star3:
	input:
		gdir= homedir + "data/genomes/GRCh38_Gencode25/",
		end1= wdir + "/{sample}.end1.fq",	
		end2= wdir + "/{sample}.end2.fq"
	
	output: 	
		abam= wdir + "/{sample}.Aligned.out.bam",
		rpg= wdir + "/{sample}.ReadsPerGene.out.tab",
		sjtab= wdir + "/{sample}.SJ.out.tab"
	
	params:		
		tmpdir = "{sample}_starout",
		wdir = wdir + "/",
	
	resources:
		mem_mb=6144
	threads: 16
	log:
		homedir + "project/werner1/logs/{sample}.3star.log"
	shell:
		" cd {params.wdir} && "
		" rm -rf {params.tmpdir} && mkdir {params.tmpdir} && cd {params.tmpdir} && "
		" STAR  --genomeDir {input.gdir} --readFilesIn {input.end1} {input.end2} "
		" --runThreadN {threads} --twopassMode Basic --twopass1readsN -1 " 
		" --outSAMtype BAM Unsorted --quantMode GeneCounts && "
		" mv -v Aligned.out.bam ../{wildcards.sample}.Aligned.out.bam &&  "
		" mv -v ReadsPerGene.out.tab ../{wildcards.sample}.ReadsPerGene.out.tab && "
		" mv -v SJ.out.tab ../{wildcards.sample}.SJ.out.tab && "
		" cd .. && rm -rf {params.tmpdir} "


rule samtools4: 
	input: 		wdir + "/{sample}.Aligned.out.bam"	
	output:	    wdir + "/{sample}.Aligned.sortedByCoord.out.bam"
	resources:
		mem_mb=2048
	threads: 20
	log:
		homedir + "project/werner1/logs/{sample}.4sam.log"
	shell:
		"samtools sort -m {resources.mem_mb}M -o {output} -O bam -@ {threads} {input} && "
		"samtools index {output} "

rule samtools5:
	input:
		bam= wdir + "/{sample}.Aligned.sortedByCoord.out.bam"	
	output:
		xbam= wdir + "/{sample}."+ chr +".bam",	
		xfiltbam= wdir + "/{sample}."+ chr +".filt.bam"	

	params:
		tmpdir = "{sample}_tmpdir",
		chrom = chr,
		wdir = wdir + "/",
		gdir=homedir + "data/genomes/GRCh38_Gencode25",
	resources:
		mem_mb=10240
	threads: 1
	log:
		homedir + "project/werner1/logs/{sample}." + chr + ".5samtools.log"
	shell:
		" cd {params.wdir} && "
		" rm -rf {params.tmpdir} && mkdir {params.tmpdir} && cd {params.tmpdir} && "
		" samtools view -b {input.bam} chr{params.chrom} > {params.chrom}.bam && "
		" samtools view -b -q 10 {params.chrom}.bam > {params.chrom}.filt.bam && "
		" mv -v {params.chrom}.bam {output.xbam} && "
		" mv -v {params.chrom}.filt.bam {output.xfiltbam} && "
		" cd .. && rm -rf {params.tmpdir} "
		
rule gatk6:		
	input:
		xbam= wdir + "/{sample}."+ chr +".bam",	
		xfiltbam= wdir + "/{sample}."+ chr +".filt.bam"	

	output:
		spbam = wdir + "/{sample}." + chr + ".split.filtered.bam"

	params:
		tmpdir = "{sample}_tmpdir",
		chrom = chr,
		wdir = wdir + "/",
		gdir = homedir + "data/genomes/GRCh38_Gencode25",
	resources:
		mem_mb=10240
	threads: 1
	

	log:
		homedir + "project/werner1/logs/{sample}." + chr + ".6gatk.log"

	shell:
		" cd {params.wdir} && "
		" rm -rf {params.tmpdir} && mkdir {params.tmpdir} && cd {params.tmpdir} && "
		
		" gatk AddOrReplaceReadGroups -I={input.xfiltbam} -O={params.chrom}.rg.bam -SO=coordinate "
		"-RGID=id -RGLB=library -RGPL=platform -RGPU=machine -RGSM=sample && "
		" gatk MarkDuplicates -I={params.chrom}.rg.bam -O={params.chrom}.dedupped.bam -CREATE_INDEX=true " 
		" -VALIDATION_STRINGENCY=SILENT -M=output.metrics && "
		" gatk SplitNCigarReads -R {input.gdir}/GRCh38.p7.genome.fa -I {params.chrom}.dedupped.bam " 
		" -O {params.chrom}.split.filtered.bam && "
		" gatk HaplotypeCaller -R {input.gdir}/GRCh38.p7.genome.fa -L chr{params.chrom} " 
		" -I {chr}.split.filtered.bam --dont-use-soft-clipped-bases -stand-call-conf 0.0 "
		" -O {params.chrom}.filtered.vcf && "
		" gatk SelectVariants -R {params.gdir}/GRCh38.p7.genome.fa -L chr{params.chrom} "
        "-V {params.chrom}.filtered.vcf -O {params.chrom}.snps.vcf -select-type SNP &&"
		" gatk VariantFiltration -R {params.gdir}/GRCh38.p7.genome.fa -L chr{params.chrom} "
        " -V {params.chrom}.snps.vcf -O {params.chrom}.snps_filtered.vcf "
        ' -filter "QD < 2.0" --filter-name "QD2" '
        ' -filter "QUAL < 30.0" --filter-name "QUAL30" '
        ' -filter "SOR > 3.0" --filter-name "SOR3" '
        ' -filter "FS > 60.0" --filter-name "FS60" '
        ' -filter "MQ < 40.0" --filter-name "MQ40" '
        ' -filter "MQRankSum < -12.5" --filter-name "MQRankSum-12.5" '
        ' -filter "ReadPosRankSum < -8.0" --filter-name "ReadPosRankSum-8" && '
		
		" cd .. && rm -rf {params.outdir} ../ "

rule igvtools7:	
	input:
		snpdb= homedir + "data/snpdb/chr"+ chr +".snpdb.txt",
		gdir= homedir + "data/genomes/GRCh38_Gencode25",    
		bam= wdir + "/{sample}." + chr + ".split.filtered.bam"

	output:
	    splitwig= wdir + "/{sample}." + chr + ".split.filtered.wig", 
		filtvcf= wdir + "/{sample}." + chr + ".filtered.vcf", 
		intwig= wdir + "/{sample}." + chr + ".intersect.wig",
		cut= wdir + "/{sample}." + chr + ".cut"	
	resources:
		mem_mb=10240
	threads: 1
	
	params:
		tmpdir = "{sample}_tmpdir",
		wdir = wdir + "/",
		chrom=chr,
		
	shell:
		" cd {params.wdir} && "
		" rm -rf {params.tmpdir} && mkdir {params.tmpdir} && cd {params.tmpdir} && "		
		" igvtools count -z 0 -w 1 --bases --strands read {params.chrom}.split.filtered.bam " 
		" tmp.{wildcard.sample}.wig {input.gdir}/chr{params.chrom}.fa  && "
		
		" grep {params.chrom} {params.chrom}.filtered.vcf | cut -f2-5 > A && "
		" cut -f1 A > B && "
		" grep -Fw -f B  > D && "
		" grep -Fw -f D tmp.{wildcards.sample}.wig > {params.chrom}.intersect.wig && "
		" grep -Fw -f D A > {params.chrom}.cut && "
		
		" mv -v tmp.{wildcards.sample}.wig {output.splitwig}  && "
		" mv -v {params.chrom}.filtered.vcf {output.filtvcf} && "
		" mv -v {params.chrom}.intersect.wig {output.intwig} && "
		" mv -v {params.chrom}.cut {output.cut} && "
		" cd .. && rm -rf {params.tmpdir} && "
		
		